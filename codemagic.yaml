definitions:
  default_environments: &default_environments
    node: 16.14.2
    npm: latest
  trigger_on_all_push: &trigger_on_all_push
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      cancel_previous_builds: false
  shared_ios_settings: &shared_ios_settings
    max_build_duration: 60
    cache:
      cache_paths:
        - $HOME/Library/Caches/CocoaPods
    <<: *trigger_on_all_push
  shared_android_settings: &shared_android_settings
    max_build_duration: 60
    cache:
      cache_paths:
        - $HOME/.gradle/caches
    <<: *trigger_on_all_push
  scripts:
    # would be great to be able to alias all these into one single reference but couldn't figure out a way to do that
    - &yarn_install
      name: Yarn install
      script: yarn install
    - &run_linter
      name: Run linter
      script: yarn lint
    - &compile_typescript
      name: Run typescript compiler
      script: yarn typescript
    - &yarn_test
      name: Yarn test
      script: yarn test
    - &yarn_test_full_suite
      name: Yarn test full suite
      script: CI_FULL_SUITE=1 yarn test
    - &build_sdk_latest_ios
      name: Build latest iOS version and check build folder
      script: |
        cd ios
        xcodebuild build -configuration Release
        if [[ ! -d build/RlyNetworkMobileSdk.build/Release-iphoneos/RlyNetworkMobileSdk.build ]]; then
        exit 1
        fi
    - &build_sdk_previous_ios
      name: Build previous iOS version and check build folder
      script: |
        cd ios
        xcodebuild build -configuration ReleasePreviousiOSVersion
        if [[ ! -d build/RlyNetworkMobileSdk.build/ReleasePreviousiOSVersion-iphoneos/RlyNetworkMobileSdk.build ]]; then
        exit 1
        fi
    - &build_sdk_android
      name: Build android and check build folder
      script: |
        cd android
        ./gradlew build
        if [[ ! -d build ]]; then
        exit 1
        fi

workflows:
  pre-build:
    name: Pre build
    max_build_duration: 60
    environment:
      <<: *default_environments
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    <<: *trigger_on_all_push
    scripts:
      - *yarn_install
      - *run_linter
      - *compile_typescript
      - *yarn_test # this happens on every push, so don't need to run full suite here
    publishing:
      slack:
        channel: '#ci-builds'
  ios-build-latest-xcode:
    name: Latest Xcode - Build iOS and check for artifact
    <<: *shared_ios_settings
    environment:
      xcode: latest
    scripts:
      - *build_sdk_latest_ios
      - *build_sdk_previous_ios
  ios-build-previous-xcode:
    name: Previous XCode - Build iOS and check for artifact
    <<: *shared_ios_settings
    environment:
      xcode: 13.4
    scripts:
      - *build_sdk_latest_ios
      - *build_sdk_previous_ios
  android-build:
    name: Build android and check for artifact
    <<: *shared_android_settings
    scripts:
      - *yarn_install # probably need this? not sure
      - name: Set Android SDK location # probably need this too? not sure
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - *build_sdk_android

  publish-npm:
    name: Publish tag to NPM
    max_build_duration: 120
    environment:
      <<: *default_environments
      groups:
        - publish-npm-group
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Abort if not on main
        script: if [ `git rev-parse --abbrev-ref HEAD` != main ]; then exit 1; fi
      - *yarn_install
      - *run_linter
      - *compile_typescript
      - *yarn_test_full_suite # make sure to run full suite test for publish workflow
      - name: Clean and prepare
        script: yarn clean && yarn prepare
      - name: Authorize npm
        script: echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
      # FYI github also needs to be authorized for yarn release, but that's just done with $GITHUB_TOKEN env var
      - name: Release
        # Defaults to `patch` type release. To override, set $RELEASE_INCREMENT_OVERRIDE (e.g. "minor" "major" etc)
        # and $RELEASE_OVERRIDE_VERSION (to current version) in codemagic env vars
        script: |
          if [ $RELEASE_INCREMENT_OVERRIDE ]
          then
            if [ `cat package.json | jq -r '.version'` != $RELEASE_OVERRIDE_VERSION ]
            then
              echo Override version $RELEASE_OVERRIDE_VERSION does not match current version `cat package.json | jq -r '.version'`
              echo If this is left over from a previous release, just go delete these from the codemagic env vars
              exit 1
            else
              yarn release $RELEASE_INCREMENT_OVERRIDE --ci
            fi
          else
            yarn release patch --ci
          fi
    publishing:
      slack:
        channel: '#ci-builds'
