definitions:
  default_environments: &default_environments
    node: 16.14.2
    npm: latest
  trigger_on_main_push: &trigger_on_main_push
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'main'
          include: true
      cancel_previous_builds: true
  trigger_on_pr_to_main: &trigger_on_pr_to_main
    triggering:
      events:
        - pull_request
      branch_patterns:
        - pattern: 'main'
          include: true
          source: false
      cancel_previous_builds: true
  scripts:
    - &yarn_install
      name: Yarn install
      script: yarn install
    - &run_linter
      name: Run linter
      script: yarn lint
    - &compile_typescript
      name: Run typescript compiler
      script: yarn typescript
    - &yarn_test
      name: Yarn test
      script: yarn test
    - &yarn_test_full_suite
      name: Yarn test full suite
      script: CI_FULL_SUITE=1 yarn test

workflows:
  yarn-tests:
    name: Lightweight yarn lint/tests
    max_build_duration: 10
    environment:
      <<: *default_environments
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    <<: *trigger_on_pr_to_main
    scripts:
      - *yarn_install
      - *run_linter
      - *compile_typescript
      - *yarn_test

  yarn-full-suite:
    name: Full suite yarn lint/tests
    max_build_duration: 60
    environment:
      <<: *default_environments
      groups:
        - full-suite-tests
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    <<: *trigger_on_main_push
    scripts:
      - *yarn_install
      - *run_linter
      - *compile_typescript
      - *yarn_test_full_suite

  # npm publish
  publish-npm:
    name: Publish tag to NPM
    max_build_duration: 120
    environment:
      <<: *default_environments
      groups:
        - publish-npm-group
        - full-suite-tests
    cache:
      cache_paths:
        - $CM_BUILD_DIR/node_modules
    scripts:
      - name: Abort if not on main
        script: if [[ `git rev-parse --abbrev-ref HEAD` != main ]]; then exit 1; fi
      - *yarn_install
      - *run_linter
      - *compile_typescript
      - *yarn_test_full_suite # make sure to run full suite test for publish workflow
      - name: Authorize npm
        script: echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > ~/.npmrc
      # In theory `yarn release` should work without this step (with just the $GITHUB_TOKEN env var),
      # but something in the codemagic is overriding the auth for git push, so this forces it back to using the
      # github token
      - name: Authorize git push
        script: git remote set-url origin https://rly-network-ci-bot:$GITHUB_TOKEN@github.com/rally-dfs/rly-network-mobile-sdk
      - name: Release
        # Defaults to `patch` type release. To override, set $RELEASE_INCREMENT_OVERRIDE (e.g. "minor" "major" etc)
        # and $RELEASE_OVERRIDE_VERSION (to current version) in codemagic env vars
        script: |
          if [[ $RELEASE_INCREMENT_OVERRIDE ]]; then
            if [[ `cat package.json | jq -r '.version'` = $RELEASE_OVERRIDE_VERSION ]]; then
              yarn release $RELEASE_INCREMENT_OVERRIDE --ci
            else
              echo Override version $RELEASE_OVERRIDE_VERSION does not match current version `cat package.json | jq -r '.version'`
              echo If this is left over from a previous release, just go delete these from the codemagic env vars
              exit 1
            fi
          else
            yarn release patch --ci
          fi
    publishing:
      slack:
        channel: '#ci-builds'
